import React, { useState, useEffect } from 'react';
import { Database, Download, Trash2, RefreshCw } from 'lucide-react';
import { jsonDatabaseService } from '../services/jsonDatabaseService';

export const DatabaseViewer: React.FC = () => {
  const [databaseStats, setDatabaseStats] = useState({
    bots: 0,
    trades: 0,
    orders: 0,
    lastUpdate: null as number | null
  });

  const [isLoading, setIsLoading] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const loadDatabaseStats = async () => {
    setIsLoading(true);
    try {
      const data = jsonDatabaseService.getAllData();
      setDatabaseStats({
        bots: data.bots.length,
        trades: data.trades.length,
        orders: data.orders.bids.length + data.orders.asks.length,
        lastUpdate: data.systemStats.lastUpdate
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    loadDatabaseStats();
  }, []);

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
  const exportData = () => {
    const data = jsonDatabaseService.getAllData();
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `trading-database-${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  // –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const clearDatabase = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      jsonDatabaseService.clearAll();
      loadDatabaseStats();
    }
  };

  const formatTime = (timestamp: number | null) => {
    if (!timestamp) return '–ù–∏–∫–æ–≥–¥–∞';
    return new Date(timestamp).toLocaleString('ru-RU');
  };

  return (
    <div className="space-y-6">
      <div className="bg-gray-800 rounded-lg p-6">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-3">
            <Database className="w-6 h-6 text-blue-400" />
            <h2 className="text-xl font-bold">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤–ª–∏</h2>
          </div>
          <button
            onClick={loadDatabaseStats}
            disabled={isLoading}
            className="flex items-center space-x-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-white rounded-lg text-sm"
          >
            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />
            <span>–û–±–Ω–æ–≤–∏—Ç—å</span>
          </button>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400 mb-1">–ë–æ—Ç—ã</div>
            <div className="text-2xl font-bold text-blue-400">{databaseStats.bots}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400 mb-1">–°–¥–µ–ª–∫–∏</div>
            <div className="text-2xl font-bold text-green-400">{databaseStats.trades}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400 mb-1">–û—Ä–¥–µ—Ä–∞</div>
            <div className="text-2xl font-bold text-orange-400">{databaseStats.orders}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400 mb-1">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</div>
            <div className="text-sm font-semibold text-gray-300">
              {formatTime(databaseStats.lastUpdate)}
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ */}
        <div className="bg-gray-700 rounded-lg p-4 mb-6">
          <h3 className="text-lg font-semibold mb-3">üíæ –ì–¥–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ:</h3>
          <div className="space-y-2 text-sm text-gray-300">
            <div>‚Ä¢ <strong>localStorage</strong> - –æ—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ</div>
            <div>‚Ä¢ <strong>JSON —Ñ–∞–π–ª</strong> - —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è (tradingDatabase.json)</div>
            <div>‚Ä¢ <strong>–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</strong> - –∫–∞–∂–¥—ã–µ 2-5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ —Ç–æ—Ä–≥–æ–≤–ª–µ</div>
            <div>‚Ä¢ <strong>–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å</strong> - –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏</div>
          </div>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="flex flex-wrap gap-3">
          <button
            onClick={exportData}
            className="flex items-center space-x-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg"
          >
            <Download className="w-4 h-4" />
            <span>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</span>
          </button>
          
          <button
            onClick={clearDatabase}
            className="flex items-center space-x-2 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg"
          >
            <Trash2 className="w-4 h-4" />
            <span>–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É</span>
          </button>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–∞—Ö */}
      <div className="bg-gray-800 rounded-lg p-6">
        <h3 className="text-lg font-semibold mb-4">üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:</h3>
        <div className="space-y-3 text-sm">
          <div className="flex items-center space-x-3">
            <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
            <span><code>src/data/tradingDatabase.json</code> - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="w-2 h-2 bg-green-400 rounded-full"></div>
            <span><code>src/services/jsonDatabaseService.ts</code> - —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="w-2 h-2 bg-orange-400 rounded-full"></div>
            <span><code>localStorage</code> - –∫—ç—à –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</span>
          </div>
        </div>
      </div>
    </div>
  );
};
