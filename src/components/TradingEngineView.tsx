import React, { useState, useEffect } from 'react';
import { tradingEngine } from '../services/tradingEngine';

export const TradingEngineView: React.FC = () => {
  const [stats, setStats] = useState(tradingEngine.getStats());
  const [queuedOrders, setQueuedOrders] = useState(tradingEngine.getQueuedOrders());
  const [feeBalance, setFeeBalance] = useState('0');
  const [isCollecting, setIsCollecting] = useState(false);

  useEffect(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(() => {
      setStats(tradingEngine.getStats());
      setQueuedOrders(tradingEngine.getQueuedOrders());
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  const handleCollectFees = async () => {
    setIsCollecting(true);
    try {
      const txHash = await tradingEngine.collectFees();
      if (txHash) {
        console.log('‚úÖ –ö–æ–º–∏—Å—Å–∏–∏ —Å–æ–±—Ä–∞–Ω—ã:', txHash);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –∫–æ–º–∏—Å—Å–∏–π:', error);
    } finally {
      setIsCollecting(false);
    }
  };

  return (
    <div className="space-y-6">
      <div className="bg-gray-800 rounded-lg p-6">
        <h2 className="text-xl font-bold text-white mb-4">üöÄ –¢–æ—Ä–≥–æ–≤—ã–π –î–≤–∏–∂–æ–∫</h2>
        
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400">–û—Ä–¥–µ—Ä–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏</div>
            <div className="text-2xl font-bold text-blue-400">{stats.ordersInQueue}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400">–†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞</div>
            <div className="text-2xl font-bold text-green-400">{stats.batchSize}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400">–¢–∞–π–º–∞—É—Ç (—Å–µ–∫)</div>
            <div className="text-2xl font-bold text-yellow-400">{stats.batchTimeout / 1000}</div>
          </div>
          
          <div className="bg-gray-700 rounded-lg p-4">
            <div className="text-sm text-gray-400">–ö–æ—à–µ–ª–µ–∫ –∫–æ–º–∏—Å—Å–∏–π</div>
            <div className="text-xs font-mono text-purple-400 break-all">{stats.feeWallet}</div>
          </div>
        </div>

        {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="flex space-x-4 mb-6">
          <button
            onClick={handleCollectFees}
            disabled={isCollecting}
            className="px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-600 text-white rounded-lg"
          >
            {isCollecting ? '–°–±–æ—Ä...' : 'üí∞ –°–æ–±—Ä–∞—Ç—å –∫–æ–º–∏—Å—Å–∏–∏'}
          </button>
          
          <button
            onClick={() => tradingEngine.startBatchProcessor()}
            className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg"
          >
            ‚è∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞—Ç—á–µ—Ä
          </button>
        </div>

        {/* –û—Ä–¥–µ—Ä–∞ –≤ –æ—á–µ—Ä–µ–¥–∏ */}
        <div className="bg-gray-700 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-white mb-3">üìã –û—Ä–¥–µ—Ä–∞ –≤ –æ—á–µ—Ä–µ–¥–∏</h3>
          
          {queuedOrders.length === 0 ? (
            <div className="text-gray-400 text-center py-4">–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞</div>
          ) : (
            <div className="space-y-2 max-h-64 overflow-y-auto">
              {queuedOrders.map((order, index) => (
                <div key={order.id} className="bg-gray-600 rounded-lg p-3 flex justify-between items-center">
                  <div className="flex space-x-4">
                    <span className="text-sm text-gray-300">#{index + 1}</span>
                    <span className={`px-2 py-1 rounded text-xs ${
                      order.side === 'buy' ? 'bg-green-600 text-white' : 'bg-red-600 text-white'
                    }`}>
                      {order.side.toUpperCase()}
                    </span>
                    <span className="text-sm text-white">{order.amountIn} {order.tokenIn}</span>
                    <span className="text-sm text-gray-400">‚Üí</span>
                    <span className="text-sm text-white">{order.tokenOut}</span>
                  </div>
                  
                  <div className="text-xs text-gray-400">
                    {new Date(order.timestamp).toLocaleTimeString()}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã */}
        <div className="mt-6 bg-gray-700 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-white mb-3">‚öôÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–≤–∏–∂–æ–∫</h3>
          
          <div className="space-y-2 text-sm text-gray-300">
            <div>1. <span className="text-blue-400">–°–±–æ—Ä –æ—Ä–¥–µ—Ä–æ–≤</span> - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞—é—Ç –æ—Ä–¥–µ—Ä–∞</div>
            <div>2. <span className="text-green-400">–ë–∞—Ç—á–∏–Ω–≥</span> - –°–æ–±–∏—Ä–∞–µ–º {stats.batchSize} –æ—Ä–¥–µ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø—É</div>
            <div>3. <span className="text-yellow-400">–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</span> - –û–¥–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –æ—Ä–¥–µ—Ä–æ–≤</div>
            <div>4. <span className="text-purple-400">–ö–æ–º–∏—Å—Å–∏–∏</span> - 0.2% —Å –∫–∞–∂–¥–æ–≥–æ –æ—Ä–¥–µ—Ä–∞ ‚Üí {stats.feeWallet}</div>
            <div>5. <span className="text-red-400">–ì–∞–∑</span> - –ü–ª–∞—Ç–∏–º –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π</div>
          </div>
          
          <div className="mt-4 p-3 bg-blue-900 rounded-lg">
            <div className="text-blue-200 font-semibold">üí° –≠–∫–æ–Ω–æ–º–∏—è –≥–∞–∑–∞</div>
            <div className="text-blue-100 text-sm">
              –í–º–µ—Å—Ç–æ 10 –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π = 1 –±–∞—Ç—á —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è<br/>
              –≠–∫–æ–Ω–æ–º–∏—è: ~90% –Ω–∞ –≥–∞–∑–µ + –ø—Ä–∏–±—ã–ª—å —Å –∫–æ–º–∏—Å—Å–∏–π
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
