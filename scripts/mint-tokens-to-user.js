const { ethers } = require('ethers');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SEPOLIA_RPC = 'https://sepolia.gateway.tenderly.co';
const PRIVATE_KEY = process.env.PRIVATE_KEY;
const USER_ADDRESS = process.env.USER_ADDRESS || '0x5137B8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ê–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
const TOKEN_ADDRESSES = {
  USDT: '0x434897c0Be49cd3f8d9bed1e9C56F8016afd2Ee6',
  BTC: '0xC941593909348e941420D5404Ab00b5363b1dDB4',
  ETH: '0x13E5f0d98D1dA90931A481fe0CE9eDAb24bA2Ecb'
};

// ABI –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
const TOKEN_ABI = [
  "function mint(address to, uint256 amount) public onlyOwner",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)"
];

async function mintTokensToUser() {
  try {
    console.log('üöÄ Starting token minting process...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏
    const provider = new ethers.providers.JsonRpcProvider(SEPOLIA_RPC);
    const wallet = new ethers.Wallet(PRIVATE_KEY, provider);
    
    console.log('‚úÖ Connected to Sepolia network');
    console.log('üë§ Owner address:', await wallet.getAddress());
    console.log('üë§ User address:', USER_ADDRESS);
    
    // –ú–∏–Ω—Ç–∏–º —Ç–æ–∫–µ–Ω—ã
    const tokensToMint = [
      { symbol: 'USDT', amount: '10000', decimals: 6 },
      { symbol: 'BTC', amount: '0.1', decimals: 8 },
      { symbol: 'ETH', amount: '1', decimals: 18 }
    ];
    
    for (const token of tokensToMint) {
      try {
        console.log(`\nü™ô Minting ${token.amount} ${token.symbol}...`);
        
        const tokenContract = new ethers.Contract(
          TOKEN_ADDRESSES[token.symbol],
          TOKEN_ABI,
          wallet
        );
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        const currentBalance = await tokenContract.balanceOf(USER_ADDRESS);
        console.log(`üìä Current ${token.symbol} balance:`, ethers.utils.formatUnits(currentBalance, token.decimals));
        
        // –ú–∏–Ω—Ç–∏–º —Ç–æ–∫–µ–Ω—ã
        const amount = ethers.utils.parseUnits(token.amount, token.decimals);
        const tx = await tokenContract.mint(USER_ADDRESS, amount);
        console.log(`‚è≥ Transaction hash: ${tx.hash}`);
        
        await tx.wait();
        console.log(`‚úÖ ${token.amount} ${token.symbol} minted successfully!`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
        const newBalance = await tokenContract.balanceOf(USER_ADDRESS);
        console.log(`üìä New ${token.symbol} balance:`, ethers.utils.formatUnits(newBalance, token.decimals));
        
      } catch (error) {
        console.error(`‚ùå Error minting ${token.symbol}:`, error.message);
      }
    }
    
    console.log('\nüéâ Token minting process completed!');
    
  } catch (error) {
    console.error('‚ùå Fatal error:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  mintTokensToUser();
}

module.exports = { mintTokensToUser };
