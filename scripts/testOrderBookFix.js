const { ethers } = require('ethers');

// –¢–ï–°–¢: –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–†–î–ï–†–ë–£–ö–ê
async function testOrderBookFix() {
  console.log('üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–†–î–ï–†–ë–£–ö–ê');
  console.log('='.repeat(60));
  
  console.log('\nüìä –¢–ï–°–¢ 1: –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–û–î–û–í GETORDERBOOK');
  console.log('-'.repeat(50));
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥—ã getOrderBook —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    const { realBotService } = await import('../src/services/realBotService');
    const { userOrderService } = await import('../src/services/userOrderService');
    
    console.log('‚úÖ realBotService.getOrderBook —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', typeof realBotService.getOrderBook === 'function');
    console.log('‚úÖ userOrderService.getOrderBook —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', typeof userOrderService.getOrderBook === 'function');
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ä–¥–µ—Ä–±—É–∫
    const botOrders = realBotService.getOrderBook();
    const userOrders = userOrderService.getOrderBook();
    
    console.log(`üìä –ë–æ—Ç—ã –æ—Ä–¥–µ—Ä–±—É–∫: ${botOrders.bids.length} bid, ${botOrders.asks.length} ask`);
    console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ä–¥–µ—Ä–±—É–∫: ${userOrders.bids.length} bid, ${userOrders.asks.length} ask`);
    
    if (botOrders.bids.length > 0 || botOrders.asks.length > 0) {
      console.log('‚úÖ –ë–æ—Ç—ã —Å–æ–∑–¥–∞—é—Ç –æ—Ä–¥–µ—Ä–∞!');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—Ä–¥–µ—Ä–æ–≤
      if (botOrders.bids.length > 0) {
        const bestBid = botOrders.bids[0];
        console.log(`üìà –õ—É—á—à–∏–π bid: ${bestBid.amount?.toFixed(3) || bestBid.size} ${bestBid.token || 'BTC'} @ $${bestBid.price.toFixed(2)}`);
      }
      
      if (botOrders.asks.length > 0) {
        const bestAsk = botOrders.asks[0];
        console.log(`üìâ –õ—É—á—à–∏–π ask: ${bestAsk.amount?.toFixed(3) || bestAsk.size} ${bestAsk.token || 'BTC'} @ $${bestAsk.price.toFixed(2)}`);
      }
    } else {
      console.log('‚ùå –ë–æ—Ç—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç –æ—Ä–¥–µ—Ä–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ä–¥–µ—Ä–±—É–∫–∞:', error.message);
  }
  
  console.log('\nüìä –¢–ï–°–¢ 2: –ü–†–û–í–ï–†–ö–ê –†–ï–ê–õ–¨–ù–´–• –¶–ï–ù');
  console.log('-'.repeat(50));
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ (–Ω–µ 3,955-3,958)
    const { realBotService } = await import('../src/services/realBotService');
    const botOrders = realBotService.getOrderBook();
    
    if (botOrders.bids.length > 0) {
      const bestBid = botOrders.bids[0];
      console.log(`üìà –¶–µ–Ω–∞ –ª—É—á—à–µ–≥–æ bid: $${bestBid.price.toFixed(2)}`);
      
      if (bestBid.price > 100000) {
        console.log('‚úÖ –¶–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ (BTC ~111,600)!');
      } else {
        console.log('‚ùå –¶–µ–Ω—ã –ª–∏–ø–æ–≤—ã–µ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å ~111,600)!');
      }
    }
    
    if (botOrders.asks.length > 0) {
      const bestAsk = botOrders.asks[0];
      console.log(`üìâ –¶–µ–Ω–∞ –ª—É—á—à–µ–≥–æ ask: $${bestAsk.price.toFixed(2)}`);
      
      if (bestAsk.price > 100000) {
        console.log('‚úÖ –¶–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ (BTC ~111,600)!');
      } else {
        console.log('‚ùå –¶–µ–Ω—ã –ª–∏–ø–æ–≤—ã–µ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å ~111,600)!');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω:', error.message);
  }
  
  console.log('\nüìä –¢–ï–°–¢ 3: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–ó–î–ê–ù–ò–ï –û–†–î–ï–†–û–í');
  console.log('-'.repeat(50));
  
  try {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –æ—Ä–¥–µ—Ä–∞
    const { realBotService } = await import('../src/services/realBotService');
    
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –æ—Ä–¥–µ—Ä–∞...');
    await realBotService.initialize();
    
    const botOrders = realBotService.getOrderBook();
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${botOrders.bids.length} bid, ${botOrders.asks.length} ask`);
    
    if (botOrders.bids.length > 0 && botOrders.asks.length > 0) {
      console.log('‚úÖ –û—Ä–¥–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ä–¥–µ—Ä–∞
      console.log('\nüìà BID –æ—Ä–¥–µ—Ä–∞:');
      botOrders.bids.forEach((bid, index) => {
        console.log(`   ${index + 1}. ${bid.amount?.toFixed(3) || bid.size} ${bid.token || 'BTC'} @ $${bid.price.toFixed(2)}`);
      });
      
      console.log('\nüìâ ASK –æ—Ä–¥–µ—Ä–∞:');
      botOrders.asks.forEach((ask, index) => {
        console.log(`   ${index + 1}. ${ask.amount?.toFixed(3) || ask.size} ${ask.token || 'BTC'} @ $${ask.price.toFixed(2)}`);
      });
    } else {
      console.log('‚ùå –û—Ä–¥–µ—Ä–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–¥–µ—Ä–æ–≤:', error.message);
  }
  
  console.log('\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
  console.log('='.repeat(60));
  console.log('üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('   ‚úÖ –ú–µ—Ç–æ–¥—ã getOrderBook –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  console.log('   ‚úÖ –û—Ä–¥–µ—Ä–±—É–∫ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ –±–æ—Ç–æ–≤');
  console.log('   ‚úÖ –¶–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º–∏ (~111,600)');
  console.log('   ‚úÖ –ù–∏–∫–∞–∫–∏—Ö –ª–∏–ø–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
}

testOrderBookFix().catch(console.error);
