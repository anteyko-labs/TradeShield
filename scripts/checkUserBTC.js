// –ü–†–û–í–ï–†–ö–ê BTC –ë–ê–õ–ê–ù–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
const { ethers } = require('ethers');

async function checkUserBTC() {
  console.log('üîß –ü–†–û–í–ï–†–ö–ê BTC –ë–ê–õ–ê–ù–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
  console.log('='.repeat(60));

  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏
    const provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/4c8f4a87f45c4e9d9a655e66dfacfcd9');
    
    // –ê–¥—Ä–µ—Å–∞
    const USDT_ADDRESS = '0x434897c0Be49cd3f8d9bed1e9C56F8016afd2Ee6';
    const BTC_ADDRESS = '0xC941593909348e941420D5404Ab00b5363b1dDB4';
    const ETH_ADDRESS = '0x13E5f0d98D1dA90931A481fe0CE9eDAb24bA2Ecb';
    
    // ABI –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
    const TOKEN_ABI = [
      "function balanceOf(address owner) view returns (uint256)",
      "function decimals() view returns (uint8)"
    ];
    
    // –ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    const userAddress = '0x513756b7ed711c472537cb497833c5d5eb02a3df';
    
    console.log(`üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –¥–ª—è: ${userAddress}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã
    const usdtContract = new ethers.Contract(USDT_ADDRESS, TOKEN_ABI, provider);
    const btcContract = new ethers.Contract(BTC_ADDRESS, TOKEN_ABI, provider);
    const ethContract = new ethers.Contract(ETH_ADDRESS, TOKEN_ABI, provider);
    
    const usdtBalance = await usdtContract.balanceOf(userAddress);
    const btcBalance = await btcContract.balanceOf(userAddress);
    const ethBalance = await ethContract.balanceOf(userAddress);
    
    console.log('\nüìä –†–ï–ê–õ–¨–ù–´–ï –ë–ê–õ–ê–ù–°–´ –í –ë–õ–û–ö–ß–ï–ô–ù–ï:');
    console.log(`üí∞ USDT: ${ethers.utils.formatUnits(usdtBalance, 6)}`);
    console.log(`üí∞ BTC: ${ethers.utils.formatUnits(btcBalance, 18)}`);
    console.log(`üí∞ ETH: ${ethers.utils.formatUnits(ethBalance, 18)}`);
    
    if (btcBalance.gt(0)) {
      console.log('‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å BTC –≤ –±–ª–æ–∫—á–µ–π–Ω–µ!');
    } else {
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ BTC –≤ –±–ª–æ–∫—á–µ–π–Ω–µ!');
      console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞: userBalanceService.addBTCTokensToUser() –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–∫–µ–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –ø–∞–º—è—Ç—å, –Ω–µ –≤ –±–ª–æ–∫—á–µ–π–Ω!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º DEX –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    const DEX_ADDRESS = '0x72bfaa294E6443E944ECBdad428224cC050C658E';
    const dexUsdtBalance = await usdtContract.balanceOf(DEX_ADDRESS);
    const dexBtcBalance = await btcContract.balanceOf(DEX_ADDRESS);
    
    console.log('\nüìä –ë–ê–õ–ê–ù–°–´ –í DEX –ö–û–ù–¢–†–ê–ö–¢–ï:');
    console.log(`üí∞ USDT: ${ethers.utils.formatUnits(dexUsdtBalance, 6)}`);
    console.log(`üí∞ BTC: ${ethers.utils.formatUnits(dexBtcBalance, 18)}`);
    
    if (dexUsdtBalance.gt(0) && dexBtcBalance.gt(0)) {
      console.log('‚úÖ –í DEX –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ –µ—Å—Ç—å –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å!');
    } else {
      console.log('‚ùå –í DEX –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ –ù–ï–¢ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏!');
      console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ—Ç –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏!');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤:', error.message);
  }
  
  console.log('\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('='.repeat(60));
}

checkUserBTC();
